<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Interactive Logistic Fit</title>
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <style>
        .equation {
            text-align: center;
            font-size: 20px;
            font-weight: bold;
            margin-bottom: 15px;
            font-family: Arial, sans-serif;
        }
    </style>
</head>
<body>
    <h2>Interactive Logistic Fit</h2>
    
    <h3>Logistic Model Controls</h3>
    <label>a (Min Value): <input type="range" id="a" min="0" max="50" step="0.5" value="10" oninput="updatePlot()"> <span id="a_value">10</span></label><br>
    <label>b (Max Value): <input type="range" id="b" min="50" max="200" step="0.5" value="100" oninput="updatePlot()"> <span id="b_value">100</span></label><br>
    <label>k (Growth Rate): <input type="range" id="k" min="-0.1" max="0.1" step="0.0001" value="0.01" oninput="updatePlot()"> <span id="k_value">0.01</span></label><br>
    <label>xâ‚€ (Midpoint): <input type="range" id="x0" min="500" max="1500" step="0.0001" value="1000" oninput="updatePlot()"> <span id="x0_value">1000</span></label><br>
    
    <p id="equation" class="equation"></p>
    <div id="logisticPlot"></div>
    
    <script>
        async function loadCSV() {
            const response = await fetch('logit_data.csv');
            const text = await response.text();
            const rows = text.split("\n").slice(1);
            let x = [], y = [];
            rows.forEach(row => {
                const cols = row.split(",");
                if (cols.length >= 2) {
                    x.push(parseFloat(cols[0]));
                    y.push(parseFloat(cols[1]));
                }
            });
            return {x, y};
        }

        function logisticFunction(x, a, b, k, x0) {
            return a + (b - a) / (1 + Math.exp(-k * (x - x0)));
        }

        let data;
        loadCSV().then(loadedData => {
            data = loadedData;
            updatePlot();
        });

        function updatePlot() {
            if (!data) return;

            let a = parseFloat(document.getElementById("a").value);
            let b = parseFloat(document.getElementById("b").value);
            let k = parseFloat(document.getElementById("k").value);
            let x0 = parseFloat(document.getElementById("x0").value);

            document.getElementById("a_value").textContent = a.toFixed(3);
            document.getElementById("b_value").textContent = b.toFixed(3);
            document.getElementById("k_value").textContent = k.toFixed(4);
            document.getElementById("x0_value").textContent = x0.toFixed(4);

            let xFit = Array.from({length: 100}, (_, i) => i * 20);
            let yFit = xFit.map(x => logisticFunction(x, a, b, k, x0));
            
            let absErrorLines = [];
            data.x.forEach((xi, i) => {
                absErrorLines.push({
                    x: [xi, xi],
                    y: [data.y[i], logisticFunction(xi, a, b, k, x0)],
                    mode: 'lines',
                    line: {color: 'gray', dash: 'dot', width: 1},
                    showlegend: false
                });
            });
            
            let layout = {yaxis: {range: [Math.min(...data.y) - 5, Math.max(...data.y) + 5]}, title: "Logistic Fit"};
            
            Plotly.newPlot('logisticPlot', [
                {x: data.x, y: data.y, mode: 'markers', type: 'scatter', name: 'Actual Data', marker: {color: 'blue'}},
                {x: xFit, y: yFit, mode: 'lines', type: 'scatter', name: 'Logistic Fit', line: {color: 'red', dash: 'dot'}},
                ...absErrorLines
            ], layout);
            
            document.getElementById("equation").innerHTML = `f(x) = ${a.toFixed(3)} + \frac{(${b.toFixed(3)} - ${a.toFixed(3)})}{1 + e^{-${k.toFixed(4)}(x - ${x0.toFixed(4)})}}`;
        }
    </script>
</body>
</html>
